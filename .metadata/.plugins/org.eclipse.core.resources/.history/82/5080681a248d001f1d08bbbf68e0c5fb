package publicationPackage;

import java.text.DecimalFormat;

import customerPackage.CustomerExceptionHandler;
import ordersPackage.Orders;

public class Publication {
	private int id;
	private Double price;
	private int quantity;
	private String name;
	private String frequency;
	
	
	public Double getPrice() {
		return price;
	}

	public int getQuantity() {
		return quantity;
	}

	public String getName() {
		return name;
	}
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getFrequency() {
		return frequency;
	}

	public void setFrequency(String frequency) {
		this.frequency = frequency;
	}

	public void setPrice(Double price) {
		this.price = price;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public void setName(String name) {
		this.name = name;
	}

	/*
	 * public Double getPrice() {}
	 * 
	 * public void setPrice() {}
	 * 
	 * public Double updatePrice() {}
	 * 
	 * public int getQuantity() {}
	 * 
	 * public void setQuantity() {}
	 * 
	 * public int updateQuantity() {}
	 * 
	 * public String getName() {}
	 * 
	 * public void setName() {}
	 * 
	 * public String updateName() {}
	 */
	public Publication(String p, String q, String n,String f) throws PublicationExceptionHandler  {
		id = 0;
		
		// Validate Input
		try {
			
			validatePrice(p);
			validateQuantity(q);
			validateName(n);
			validateFrequency(f);
			Double pd=Double.parseDouble(p);
			int qi = Integer.parseInt(q);
			
			this.price = pd;
			this.quantity = qi;
			this.name = n;
			this.frequency=f;
		}
		catch (PublicationExceptionHandler e) {
			throw e;
		}
		
		/*
		 * // Set Attributes this.price = pd; this.quantity = qi; this.name = n;
		 * this.frequency=fi;
		 */
	}
	
	public static void validatePrice(String p) throws PublicationExceptionHandler {
		Double pd=(double) 0;
		try{
			pd=Double.parseDouble(p); //use your variable or object in place of obj
		}catch (NumberFormatException e){
			throw new PublicationExceptionHandler("Price is not Double");
		}
		if (p.isBlank() || p.isEmpty())
			throw new PublicationExceptionHandler("Publication Price NOT specified");
	}
	public static void validateQuantity(String q) throws PublicationExceptionHandler {
		
		int qi=-1;
		try {
			qi = Integer.parseInt(q);
		}catch(Exception e) {
			throw new PublicationExceptionHandler("Publication quantity not numeric format");
		}
		if (q.isBlank() || q.isEmpty())
			throw new PublicationExceptionHandler("Publication quantity NOT specified");
		else if (qi<0)
			throw new PublicationExceptionHandler("Publicatoin quantity needs to be 0 or greater");
	}
	public static void validateName(String n) throws PublicationExceptionHandler {
		if (n.isBlank() || n.isEmpty())
			throw new PublicationExceptionHandler("Publication Name NOT specified");
		else if (n.length() < 2)
			throw new PublicationExceptionHandler("Publication Name does not meet minimum length requirements");
		else if (n.length() > 50)
			throw new PublicationExceptionHandler("Publication Name does exceeds maximum length requirements");
	}
	public static void validateFrequency(String f) throws PublicationExceptionHandler {
		if (f.isBlank() || f.isEmpty())
			throw new PublicationExceptionHandler("Publication frequency NOT specified");
		else if ("Weekly".equals(f)||"Daily".equals(f)||"Monthly".equals(f)) {
			
		}else {
			throw new PublicationExceptionHandler("Publicatoin frequency needs Weekly, Monthly or Daily");
		}
			
	}

	public void printPublication(Publication pub) {
		System.out.println("Pubication ID: " + pub.id);
        System.out.println("Publication Price: " + pub.getPrice());
        System.out.println("Publication Quantity: " + pub.getQuantity());
        System.out.println("Publication Name: " + pub.getName());
        System.out.println("Publication Frequency: "+pub.getFrequency());
        System.out.println("----------------------------- ");
    }
	public static void printAllPublications() {
        for (Publication publication : publications) {
            publication.printPublication(publication);
        }
	}
	
	public static void deletePublication() {}
}
